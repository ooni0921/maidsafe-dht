// Maidsafe rpc arguments and responses
// data_type is defined in  base/utils.h as the enum value_types

package maidsafe;

message StoreRequest {
  required string chunkname = 1;
  required string data = 2;
  required string public_key = 3;
  required string signed_public_key = 4;
  required string signed_request = 5;
  required int32 data_type = 6;
};

message StoreResponse {
  required string result = 1;
  optional string pmid_id = 2;
};

message DeleteRequest {
  required string chunkname = 1;
  required string public_key = 2;
  required string signed_public_key = 3;
  required string signed_request = 4;
  required int32 data_type = 5;
};

message DeleteResponse {
  required string result = 1;
  optional string pmid_id = 2;
};

message GetRequest {
  required string chunkname = 1;
};

message GetResponse {
  required string result = 1;
  optional string content = 2;
  optional string pmid_id = 3;
};

message CheckChunkRequest {
  required string chunkname = 1;
};

message CheckChunkResponse {
  required string result = 1;
  required string pmid_id = 2;
};

message ValidityCheckRequest {
  required string chunkname = 1;
  required string random_data = 2;
};

message ValidityCheckResponse {
  required string result = 1;
  optional string hash_content = 2;
  required string pmid_id = 3;
};

message UpdateRequest {
  required string chunkname = 1;
  required string data = 2;
  required string public_key = 3;
  required string signed_public_key = 4;
  required string signed_request = 5;
  required int32 data_type = 6;
};

message UpdateResponse {
  required string result = 1;
  optional string pmid_id = 2;
};

message GetMessagesRequest {
  required string buffer_packet_name = 1;
  required string public_key = 2;
  required string signed_public_key = 3;
};

message GetMessagesResponse {
  required string result = 1;
  repeated string messages = 2;
  optional string pmid_id = 3;
};

message SwapChunkRequest {
  required int32 request_type = 1;
  required string chunkname1 = 2;
  optional string chunkcontent1 = 3;
  optional int32 size1 = 4;
  optional string chunkname2 = 5;
};

message SwapChunkResponse {
  required int32 request_type = 1;
  required string result = 2;
  optional string chunkname1 = 3;
  optional string chunkcontent1 = 4;
  optional int32 size1 = 5;
  optional string chunkname2 = 6;
  optional string chunkcontent2 = 7;
  optional int32 size2 = 8;
  required string pmid_id = 9;
};
