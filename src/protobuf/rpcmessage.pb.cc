// Generated by the protocol buffer compiler.  DO NOT EDIT!

#include "rpcmessage.pb.h"
#include <google/protobuf/descriptor.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format_inl.h>

namespace rpcprotocol {

namespace {

const ::google::protobuf::Descriptor* RpcMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RpcMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* rpc_message_type_descriptor_ = NULL;

}  // namespace


void protobuf_BuildDesc_rpcmessage_2eproto_AssignGlobalDescriptors(const ::google::protobuf::FileDescriptor* file) {
  RpcMessage_descriptor_ = file->message_type(0);
  RpcMessage::default_instance_ = new RpcMessage();
  static const int RpcMessage_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcMessage, rpc_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcMessage, message_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcMessage, args_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcMessage, service_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcMessage, method_),
  };
  RpcMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RpcMessage_descriptor_,
      RpcMessage::default_instance_,
      RpcMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(RpcMessage));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RpcMessage_descriptor_, RpcMessage::default_instance_);
  rpc_message_type_descriptor_ = file->enum_type(0);
  RpcMessage::default_instance_->InitAsDefaultInstance();
}

void protobuf_BuildDesc_rpcmessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;
  ::google::protobuf::DescriptorPool* pool =
    ::google::protobuf::DescriptorPool::internal_generated_pool();

  pool->InternalBuildGeneratedFile(
    "\n\020rpcmessage.proto\022\013rpcprotocol\"\200\001\n\nRpcM"
    "essage\022/\n\010rpc_type\030\001 \002(\0162\035.rpcprotocol.r"
    "pc_message_type\022\022\n\nmessage_id\030\002 \002(\005\022\014\n\004a"
    "rgs\030\003 \002(\t\022\017\n\007service\030\004 \001(\t\022\016\n\006method\030\005 \001"
    "(\t*-\n\020rpc_message_type\022\013\n\007REQUEST\020\000\022\014\n\010R"
    "ESPONSE\020\001", 209,
  &protobuf_BuildDesc_rpcmessage_2eproto_AssignGlobalDescriptors);
}

// Force BuildDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_rpcmessage_2eproto {
  StaticDescriptorInitializer_rpcmessage_2eproto() {
    protobuf_BuildDesc_rpcmessage_2eproto();
  }
} static_descriptor_initializer_rpcmessage_2eproto_;

const ::google::protobuf::EnumDescriptor* rpc_message_type_descriptor() {
  if (rpc_message_type_descriptor_ == NULL) protobuf_BuildDesc_rpcmessage_2eproto();
  return rpc_message_type_descriptor_;
}
bool rpc_message_type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================



const ::std::string RpcMessage::_default_args_;
const ::std::string RpcMessage::_default_service_;
const ::std::string RpcMessage::_default_method_;
RpcMessage::RpcMessage()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    rpc_type_(0),
    message_id_(0),
    args_(const_cast< ::std::string*>(&_default_args_)),
    service_(const_cast< ::std::string*>(&_default_service_)),
    method_(const_cast< ::std::string*>(&_default_method_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void RpcMessage::InitAsDefaultInstance() {}

RpcMessage::RpcMessage(const RpcMessage& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    rpc_type_(0),
    message_id_(0),
    args_(const_cast< ::std::string*>(&_default_args_)),
    service_(const_cast< ::std::string*>(&_default_service_)),
    method_(const_cast< ::std::string*>(&_default_method_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

RpcMessage::~RpcMessage() {
  if (args_ != &_default_args_) {
    delete args_;
  }
  if (service_ != &_default_service_) {
    delete service_;
  }
  if (method_ != &_default_method_) {
    delete method_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* RpcMessage::descriptor() {
  if (RpcMessage_descriptor_ == NULL) protobuf_BuildDesc_rpcmessage_2eproto();
  return RpcMessage_descriptor_;
}

const RpcMessage& RpcMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_rpcmessage_2eproto();
  return *default_instance_;
}

RpcMessage* RpcMessage::default_instance_ = NULL;

RpcMessage* RpcMessage::New() const {
  return new RpcMessage;
}

const ::google::protobuf::Descriptor* RpcMessage::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* RpcMessage::GetReflection() const {
  if (RpcMessage_reflection_ == NULL) protobuf_BuildDesc_rpcmessage_2eproto();
  return RpcMessage_reflection_;
}

}  // namespace rpcprotocol
